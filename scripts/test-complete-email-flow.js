const mongoose = require('mongoose');
const path = require('path');

// Load environment variables
require('dotenv').config({ path: path.resolve(__dirname, '..', '.env') });

async function testCompleteEmailFlow() {
    console.log('üìß Testing Complete Email Flow...\n');
    
    try {
        // Connect to MongoDB
        const MONGODB_URI = process.env.MONGODB_URI;
        if (!MONGODB_URI) {
            console.log('‚ùå MONGODB_URI not found');
            return;
        }
        
        await mongoose.connect(MONGODB_URI, {
            bufferCommands: false,
            serverSelectionTimeoutMS: 5000,
            connectTimeoutMS: 10000,
            socketTimeoutMS: 45000,
            maxPoolSize: 10,
            retryWrites: true,
            retryReads: true,
        });
        console.log('‚úÖ Connected to MongoDB');
        
        const db = mongoose.connection.db;
        
        // Check current state
        const usersCollection = db.collection('user');
        const sessionsCollection = db.collection('session');
        
        const userCount = await usersCollection.countDocuments();
        const sessionCount = await sessionsCollection.countDocuments();
        
        console.log(`\nüìä Current Database State:`);
        console.log(`   ‚Ä¢ Users: ${userCount}`);
        console.log(`   ‚Ä¢ Sessions: ${sessionCount}`);
        
        if (userCount > 0) {
            const users = await usersCollection.find({}).limit(3).toArray();
            console.log('\nüë• Recent Users:');
            users.forEach((user, index) => {
                console.log(`   ${index + 1}. ${user.email} (${user.name}) - Created: ${user.createdAt || 'Unknown'}`);
            });
        }
        
        console.log('\nüéØ Email Flow Test Instructions:');
        console.log('   1. Open browser: http://localhost:3000/sign-up');
        console.log('   2. Fill out the sign-up form with:');
        console.log('      ‚Ä¢ Email: test-email@example.com');
        console.log('      ‚Ä¢ Password: password123');
        console.log('      ‚Ä¢ Full Name: Test User');
        console.log('      ‚Ä¢ Country: United States');
        console.log('      ‚Ä¢ Investment Goals: Growth');
        console.log('      ‚Ä¢ Risk Tolerance: Moderate');
        console.log('      ‚Ä¢ Preferred Industry: Technology');
        console.log('   3. Submit the form');
        console.log('   4. Check your email (including spam folder)');
        console.log('   5. Look for "Welcome to InsideX" email');
        
        console.log('\nüîç What to Watch For:');
        console.log('   ‚Ä¢ No errors in terminal during signup');
        console.log('   ‚Ä¢ User gets created in MongoDB');
        console.log('   ‚Ä¢ Welcome email arrives within 1-2 minutes');
        console.log('   ‚Ä¢ Email has InsideX branding and colors');
        console.log('   ‚Ä¢ Email contains personalized content based on form data');
        
        console.log('\n‚úÖ Expected Email Content:');
        console.log('   ‚Ä¢ Subject: "Welcome to InsideX - your stock market toolkit is ready!"');
        console.log('   ‚Ä¢ From: "InsideX" <insidex@jsmastery.pro>');
        console.log('   ‚Ä¢ Personalized intro mentioning their investment goals');
        console.log('   ‚Ä¢ InsideX branding and yellow/gold color scheme');
        console.log('   ‚Ä¢ Dashboard preview image');
        console.log('   ‚Ä¢ CTA button linking to https://insidex.app/');
        
        console.log('\nüö® If Email Doesn\'t Arrive:');
        console.log('   ‚Ä¢ Check spam/junk folder');
        console.log('   ‚Ä¢ Verify Gmail App Password is correct');
        console.log('   ‚Ä¢ Check terminal for Inngest errors');
        console.log('   ‚Ä¢ Ensure Gemini API key is valid');
        
    } catch (error) {
        console.error('‚ùå Test failed:', error.message);
    } finally {
        if (mongoose.connection.readyState === 1) {
            await mongoose.disconnect();
            console.log('\nüîå Disconnected from MongoDB');
        }
    }
}

testCompleteEmailFlow();
